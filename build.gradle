/*
 * (C) Copyright IBM Corp. 2020
 *
 * SPDX-License-Identifier: Apache-2.0
 */
 
plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'jacoco'
    id 'maven-publish'
    id 'signing'

}


jacoco {
  toolVersion = '0.8.6'
}


sourceCompatibility = 11
targetCompatibility = 11

tasks.withType(JavaCompile) {
  options.encoding = 'UTF-8'
}



group = 'io.github.linuxforhealth'
version = (findProperty('version') == 'unspecified') ? '1.0.0-SNAPSHOT' : version
ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

repositories {
    
    jcenter()
     mavenCentral()
     maven {
        url "http://maven.scijava.org/content/repositories/public/"
    }
}

dependencies {
  

    implementation group: 'org.dcm4che', name: 'dcm4che-core', version: '5.23.3'
    implementation group: 'org.dcm4che', name: 'dcm4che-imageio', version: '5.23.3'
    implementation group: 'org.dcm4che', name: 'dcm4che-json', version: '5.23.3'

    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
  
   
    api 'org.apache.commons:commons-math3:3.6.1' 
    implementation group: 'org.apache.commons', name: 'commons-text', version: '1.9'  
    api 'org.jeasy:easy-rules-core:4.1.0' 
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.10.1'
   
    implementation 'com.google.guava:guava:23.0'
    implementation 'org.apache.commons:commons-collections4:4.3'
    implementation 'org.apache.commons:commons-lang3:3.6'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.10.5.1'  
    implementation group: 'commons-io', name: 'commons-io', version: '2.10.0'
  
    // test dependencies
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.7.2'  
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'   
    testImplementation group: 'org.assertj', name: 'assertj-core', version: '3.19.0'   
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: '5.7.2'

    testImplementation group: 'commons-io', name: 'commons-io', version: '2.10.0'

   
}


test {
     useJUnitPlatform()
     finalizedBy jacocoTestReport // report is always generated after tests run
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

publishing {

  repositories {
    maven {
      name = "OSSRH"
      def releaseRepo = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
      def snapshotRepo = "https://oss.sonatype.org/content/repositories/snapshots/"
      url = isReleaseVersion ? releaseRepo : snapshotRepo
      
      credentials {
        username = System.getenv("MAVEN_USERNAME")
        password = System.getenv("MAVEN_PASSWORD")
      }
    }
  }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

javadoc.failOnError = false
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    javadoc.options.addStringOption('Xdoclint:none', '-quiet')
}

artifacts {
    archives sourcesJar
    archives javadocJar
}




publishing {
    publications {
        mavenPublication(MavenPublication) {
            from components.java
            artifact sourcesJar {
                classifier "sources"
            }
            artifact javadocJar {
                classifier "javadoc"
            }
            groupId = group
            artifactId 'dicom-rules-engine'
            version = version
            
            pom {
                    name = "dicom-rules-engine"
                    description = "DICOM rules engine is a Java based library that enables writing filtering rules for DICOM Study."
                    url = "https://github.com/LinuxForHealth/dicom-rules-engine"
                    licenses {
                      license {
                        name = "The Apache License, Version 2.0"
                        url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                      }
                    }
                    developers {
                      developer {
                        id = "pbhallam"
                        
                      }
                    }
                    scm {
                      url = "https://github.com/LinuxForHealth/dicom-rules-engine.git"
                     
                    }
                  }
           
        }
    }
}


signing {
if (isReleaseVersion ) {
    def signingKeyId = System.getenv("signingKeyId")
    def signingKey = System.getenv("signingKey")
    def signingPassword = System.getenv("signingPassword")
    useInMemoryPgpKeys(signingKeyId, signingKey, signingPassword)
    }   
    sign publishing.publications.mavenPublication
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

